from abc import ABC, abstractmethod
class Shape(ABC):
    @abstractmethod
    def area(self): pass

    @abstractmethod
    def perimeter(self): pass

class Square(Shape):
    def __init__(self, side):
        self.__side = side
    def area(self):
        return self.__side * self.__side
    def perimeter(self):
        return 4 * self.__side


class Rectangle(Shape):
    def __init__(self,leni,brei):
        self.__leni=leni
        self.__brei=brei
    def area(self):
        return self.__leni * self.__brei
    def perimeter(self):
        return 2*(self.__leni + self.__brei)
    


square = Square(5)
rec=Rectangle(5,6)
print('area of the rarctangle',rec.area())
print('perimeter of the rectangle',rec.perimeter())
print('area of the square ',square.area())
print('perimeter of the square',square.perimeter())
