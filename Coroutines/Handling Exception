class DemoExcption(Exception):
    '''An exception type for the demonsttation'''

def demo_exc_handling():
    print('--> coroutine started..!!')
    while True:
        try:
            x=yield
        except DemoExcption:
            print('***DemoException handles. COntinuing...')
        else:
            print('---> coroutine recieved: {!r}'.format(x))
    raise RuntimeError('This line should never run..!!')


exc=demo_exc_handling()
print(next(exc))
print('----')
print(exc.send(11))
print('----')
print(exc.send(22))
print('----')
print(exc.close())

from inspect import getgeneratorstate
print(getgeneratorstate(exc))


'''Throwing DemoException into demo_exc_handling does not break it'''

exc=demo_exc_handling()
print(exc)
print(exc.send(11))
print(exc.throw(DemoExcption))
print(getgeneratorstate(exc))


'''Coroutines terminates if it can't handle an exception thrown into it'''
exc=demo_exc_handling()
print(next(exc))
print(exc.send(11))
print(exc.throw(ZeroDivisionError))
